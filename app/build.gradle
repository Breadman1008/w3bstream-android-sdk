plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.apollographql.apollo3' version '3.1.0'
}

static def generateVersionCode() {
    def result = "git rev-list HEAD --count".execute().text.trim()
    if (result.empty) result = "PowerShell -Command git rev-list HEAD --count".execute().text.trim()
    if (result.empty) throw new RuntimeException("Could not generate versioncode on this platform? Cmd output: ${result.text}")
    return result.toInteger()
}

static def tag() {
    def result = "git describe --abbrev=0".execute().text.trim()
    if (result.empty) result = ""
    return result
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.machinefi.metapebble"
        minSdk 24
        targetSdk 32
        versionCode generateVersionCode()
        versionName "v0.1 (${generateVersionCode()})"
        flavorDimensions "updater"
        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        playStore {
            dimension "updater"
            buildConfigField 'boolean', 'AUTO_UPDATE_APK', 'false'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    configurations {
        all*.exclude module: 'bcprov-jdk15to18'
    }
    lintOptions {
        abortOnError false
    }
    sourceSets {
        main {
            java {
                srcDirs 'src/main/java'
            }
        }
    }
}

androidExtensions {
    experimental = true
}

apollo {
    service("metapebble") {
        srcDir("src/main/graphql/metapebble")
        packageName.set("io.iotex.graphql.metapebble")
    }
    service("smartcontract") {
        srcDir("src/main/graphql/smartcontract")
        packageName.set("io.iotex.graphql.smartcontract")
    }
    service("test") {
        srcDir("src/main/graphql/test")
        packageName.set("io.iotex.graphql.test")
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation project(path: ':core')
    implementation project(path: ':walletconnect')
    implementation project(path: ':pebblekit')

    kapt 'com.google.dagger:dagger-compiler:2.40.1'
    kapt 'com.google.dagger:dagger-android-processor:2.40.1'
    kapt "androidx.room:room-compiler:2.1.0"

    // tools
    implementation 'com.squareup.moshi:moshi-adapters:1.13.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.13.0'
    implementation 'org.web3j:core:4.9.2'
    implementation platform('com.google.firebase:firebase-bom:29.0.3')
    implementation 'com.apollographql.apollo3:apollo-runtime:3.1.0'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.59'

    // view
    implementation 'com.sunfusheng:MarqueeView:1.4.0'
    implementation 'com.contrarywind:Android-PickerView:4.1.9'

}